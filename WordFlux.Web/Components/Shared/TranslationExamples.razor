<div>

    @foreach (var translation in Translations.Select((value, index) => new { value, index }))
    {
        if (translation.index == 0)
        {
            <hr class=""/>
        }

        <div class="card mt-1">
            <div class="card-header">

                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-fire position-absolute end-0 @GetFireColor(translation.value)" viewBox="0 0 16 16">
                    <path d="M8 16c3.314 0 6-2 6-5.5 0-1.5-.5-4-2.5-6 .25 1.5-1.25 2-1.25 2C11 4 9 .5 6 0c.357 2 .5 4-2 6-1.25 1-2 2.729-2 4.5C2 14 4.686 16 8 16m0-1c-1.657 0-3-1-3-2.75 0-.75.25-2 1.25-3C6.125 10 7 10.5 7 10.5c-.375-1.25.5-3.25 2-3.5-.179 1-.25 2 1 3 .625.5 1 1.364 1 2.25C11 14 9.657 15 8 15"/>
                </svg>

                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="@(translation.index != 0 ? "d-none" : "") bi bi-award position-absolute start-0" viewBox="0 0 16 16">
                    <path d="M9.669.864 8 0 6.331.864l-1.858.282-.842 1.68-1.337 1.32L2.6 6l-.306 1.854 1.337 1.32.842 1.68 1.858.282L8 12l1.669-.864 1.858-.282.842-1.68 1.337-1.32L13.4 6l.306-1.854-1.337-1.32-.842-1.68zm1.196 1.193.684 1.365 1.086 1.072L12.387 6l.248 1.506-1.086 1.072-.684 1.365-1.51.229L8 10.874l-1.355-.702-1.51-.229-.684-1.365-1.086-1.072L3.614 6l-.25-1.506 1.087-1.072.684-1.365 1.51-.229L8 1.126l1.356.702z"/>
                    <path d="M4 11.794V16l4-1 4 1v-4.206l-2.018.306L8 13.126 6.018 12.1z"/>
                </svg>

                <h4>
                    <button type="button" class="btn btn-link btn-lg text-decoration-none position-relative p-0" @onclick="() => SearchTerm(translation.value)">
                        @translation.value.Term
                        @*<span class="@(translation.index != 0 ? "d-none" : "") badge text-bg-secondary"></span>*@
                        @*<span class="position-absolute fs-6 top-0 start-100 translate-middle badge rounded-pill bg-danger @(translation.index != 0 ? "d-none" : "")">
                            
                            <span class="visually-hidden">unread messages</span>
                        </span>*@
                    </button>
                </h4>
            </div>
            <div class="card-body">
                <p class="card-text">@StringToHtml(translation.value.ExampleTranslated)</p>
                <blockquote class="blockquote mb-0">
                    <footer class="blockquote-footer">@StringToHtml(translation.value.ExampleOriginal)</footer>
                </blockquote>
            </div>
        </div>

        if (translation.index == 0)
        {
            <hr class=""/>
        }
    }
</div>


@code {
    private int currentCount = 0;

    [Parameter] public EventCallback<TranslationItem> OnTermSearch { get; set; }
    [Parameter] public List<TranslationItem> Translations { get; set; }

    async Task SearchTerm(TranslationItem item)
    {
        await OnTermSearch.InvokeAsync(item);
    }

    static string GetFireColor(TranslationItem item)
        => $"{item.Popularity switch { > 90 => "text-danger", > 70 => "text-warning", > 40 => "text-success", _ => "text-primary" }}";

    static RenderFragment StringToHtml(string htmlString)
    {
        return b => b.AddMarkupContent(0, htmlString);
    }

    private void IncrementCount()
    {
        currentCount++;
    }

}