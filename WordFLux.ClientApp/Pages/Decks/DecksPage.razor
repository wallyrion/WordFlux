@page "/decks"
@attribute [Authorize]
@using WordFLux.ClientApp.Components
@using WordFLux.ClientApp.Services
@using WordFlux.Contracts
@inject ApiClient ApiClient
<PageTitle>Decks</PageTitle>


<div class="container">
    <ImportDeckModal @ref="ImportDeckModalRef" OnModalClosed="RefreshDecks"></ImportDeckModal>
    
    @if (IsLoading)
    {
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    }
    else
    {
        <div class="container-fluid mb-4">
            <button type="button" class="btn btn-primary" @onclick="ImportDeckModalRef.OpenModal">
                Import <i class="bi bi-box-arrow-in-down"></i>
            </button>

            <button type="button" class="btn btn-primary ms-2" @onclick="() => IsAddDeckVisible = true" data-bs-target="#exampleModal">
                Add new <i class="bi bi-journal-plus"></i>
            </button>
        </div>

        <!-- Modal -->

        @if (IsAddDeckVisible)
        {
            <div class="row mb-4">
                <div class="col-12">
                    <AddNewDeck OnStateChanged="RefreshDecks"/>
                </div>
            </div>
        }

        <div class="row mb-3">
            @foreach (var deck in DeckCollection)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <DeckTableItem Deck="deck"/>
                </div>
            }
        </div>

        <div>



            @*<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5" id="staticBackdropLabel">Modal title</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            ...
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary">Understood</button>
                        </div>
                    </div>
                </div>
            </div> *@
        </div>
    }
</div>

@code
{
    bool IsLoading { get; set; }
    List<DeckDto> DeckCollection { get; set; } = [];
    bool IsAddDeckVisible { get; set; }
    ImportDeckModal ImportDeckModalRef { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        await RefreshDecks();
    }

    private async Task RefreshDecks()
    {
        try
        {
            IsLoading = true;
            StateHasChanged();
            DeckCollection = await ApiClient.GetDecks();
        }
        finally
        {
            IsLoading = false;
            IsAddDeckVisible = false;
        }
    }

   


  

}