@page "/decks"
@attribute [Authorize]
@using WordFLux.ClientApp.Components
@using WordFLux.ClientApp.Services
@using WordFlux.Contracts
@inject WeatherApiClient ApiClient
<PageTitle>Decks</PageTitle>


<div class="container">
    <table class="table">
        <thead>
        <tr>
            <th scope="col">Name</th>
            <th scope="col">Cards</th>
            <th scope="col">Created</th>
            <th scope="col">Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var deck in DeckCollection)
        {
            <DeckTableItem OnStateChanged="RefreshDecks" Deck="deck"/>
        }
        </tbody>
    </table>

    <div>
        <AddNewDeck OnStateChanged="RefreshDecks"/>
    </div>
    
    @*<ul class="list-group">
        @foreach (var deck in DeckCollection)
        {
            <li class="list-group-item">
                <div>
                    <div>
                        @deck.Name
                    </div>
                    <div>
                        <span>
                            <button class="btn">
                                <i class="bi bi-pencil-square"></i>
                            </button>
                        </span>
                        <span>
                            <button class="btn">
                                <i class="bi bi-trash"></i>
                            </button>
                        </span>
                    </div>
                </div>
            </li>
        }

    </ul>*@
</div>

@code
{
    List<DeckDto> DeckCollection { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        await RefreshDecks();
    }

    private async Task RefreshDecks()
    {
        DeckCollection = await ApiClient.GetDecks();
    }
}