@page "/decks"
@attribute [Authorize]
@using Microsoft.VisualBasic
@using WordFLux.ClientApp.Components
@using WordFLux.ClientApp.Services
@using WordFlux.Contracts
@inject WeatherApiClient ApiClient
<PageTitle>Decks</PageTitle>


<div class="container">
    @if (IsLoading)
    {
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    }
    else
    {
        <div class="row mb-3">
            @foreach (var deck in DeckCollection)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <DeckTableItem Deck="deck"/>
                </div>
            }
        </div>

        <div class="row">
            <div class="col-12">
                <AddNewDeck OnStateChanged="RefreshDecks"/>
            </div>
        </div>
    }
</div>

@code
{
    bool IsLoading { get; set; }
    List<DeckDto> DeckCollection { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        await RefreshDecks();
    }

    private async Task RefreshDecks()
    {
        try
        {
            IsLoading = true;
            StateHasChanged();
            DeckCollection = await ApiClient.GetDecks();
        }
        finally
        {
            IsLoading = false;
        }
    }
}